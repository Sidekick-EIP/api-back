name: Staging

on:
  push:
    branches: staging

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/sidekick

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - run: |
          npm ci
          npm run db:push
          npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v2
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
            
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_STAGING }}
          username: ${{ secrets.USERNAME_STAGING }}
          key: ${{ secrets.KEY_STAGING }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd api-back
            git pull
            git checkout staging
            npm ci
            npm run build
            npm run migrate:deploy:staging
            pm2 stop all && pm2 delete all
            pm2 start "npm run start:staging" --name api
