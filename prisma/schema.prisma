generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  PREFER_NOT_TO_SAY
}

enum SportFrequence {
  NEVER
  LESS_THAN_ONCE_A_MONTH
  ONCE_A_MONTH
  ONCE_IN_TWO_WEEKS
  ONCE_A_WEEK
  TWICE_A_WEEK
  THREE_A_WEEK
  FOUR_A_WEEK
  FIVE_A_WEEK
  MORE_THEN_FIVE_A_WEEK
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  userData  UserData?
  calories  Calories[]
  steps     Steps[]

  @@map("users")
}

model Calories {
  id         String @id @default(uuid())
  user       User   @relation(fields: [userId], references: [id])
  userId     String
  nbCalories Int

  @@map("calories")
}

model Steps {
  id         String @id @default(uuid())
  user       User   @relation(fields: [userId], references: [id])
  userId     String
  nbOfSteps  Int

  @@map("steps")
}

model UserData {
  userId          String         @id @default(uuid())
  user            User           @relation(fields: [userId], references: [id])
  firstname       String
  lastname        String
  size            Int
  weight          Int
  gender          Gender
  description     String
  sport_frequence SportFrequence
  isDarkMode      Boolean        @default(false)

  @@map("users_data")
}

model Meals {
  userId      String   @id @default(uuid())
  name        String
  ingredients Json
  balanced    Int
  createdAt   DateTime @default(now())
  updateAt    DateTime @default(now())

  @@map("meals")
}
